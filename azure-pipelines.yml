trigger:
  branches:
    include:
      - main
      - dev
      - feature/*

variables:
  buildConfiguration: 'Release'
  solution: 'EventDrivenMicroservicesSolution.sln'
  testProjects: '**/tests/**/*.csproj'
  coverageOutput: 'TestResults'

pool:
  vmImage: 'windows-latest'

stages:
# === Build Stage ===
- stage: Build
  displayName: 'Build Stage'
  jobs:
    - job: BuildJob
      displayName: 'Build Job'
      steps:
        - checkout: self

        - task: UseDotNet@2
          displayName: 'Use .NET SDK'
          inputs:
            packageType: 'sdk'
            version: '9.x'

        - task: DotNetCoreCLI@2
          displayName: 'Restore NuGet packages'
          inputs:
            command: 'restore'
            projects: '$(solution)'

        - task: DotNetCoreCLI@2
          displayName: 'Build Solution'
          inputs:
            command: 'build'
            projects: '$(solution)'
            arguments: '--configuration $(buildConfiguration)'

        - publish: '$(Build.SourcesDirectory)'
          artifact: 'source'

# === Test & Analysis Stage ===
- stage: TestAndAnalyze
  displayName: 'Test & SonarCloud Analysis'
  dependsOn: Build
  jobs:
    - job: TestJob
      displayName: 'Run Tests and Code Analysis'
      steps:
        - download: current
          artifact: source

        - task: UseDotNet@2
          displayName: 'Use .NET SDK'
          inputs:
            packageType: 'sdk'
            version: '9.x'

        - task: SonarCloudPrepare@3
          displayName: 'Prepare SonarCloud Analysis'
          inputs:
            SonarCloud: 'SonarCloud'
            organization: '$(SONAR_ORGANIZATION)'
            scannerMode: 'dotnet'
            projectKey: '$(SONAR_PROJECT_KEY)'
            projectName: 'EventDrivenMicroservicesSolution'
            extraProperties: |
              sonar.exclusions=**/bin/**,**/obj/**
              sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/TestResults/**/coverage.opencover.xml

        - task: DotNetCoreCLI@2
          displayName: 'Run Tests with Code Coverage'
          inputs:
            command: 'test'
            projects: '$(testProjects)'
            arguments: >
              --no-build
              --configuration $(buildConfiguration)
              --settings $(Build.SourcesDirectory)/coverlet.runsettings
            publishTestResults: true

        - powershell: |
            Write-Host "Listing contents of TestResults..."
            Get-ChildItem -Recurse -Path "$(Build.SourcesDirectory)/TestResults"
          displayName: 'List TestResults Directory'

        - task: ReportGenerator@5
          displayName: 'Generate Code Coverage Report'
          inputs:
            reports: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
            targetdir: '$(Build.ArtifactStagingDirectory)/CoverageReport'
            reporttypes: 'HtmlInline_AzurePipelines;Cobertura'

        - task: PublishCodeCoverageResults@2
          displayName: 'Publish Code Coverage to Azure DevOps'
          inputs:
            codeCoverageTool: 'Cobertura'
            summaryFileLocation: '$(Build.ArtifactStagingDirectory)/CoverageReport/Cobertura.xml'

        - task: SonarCloudAnalyze@3
          displayName: 'Run SonarCloud Analysis'

        - task: SonarCloudPublish@3
          displayName: 'Publish SonarCloud Results'
          inputs:
            pollingTimeoutSec: '300'
